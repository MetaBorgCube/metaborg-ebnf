module Common

lexical syntax
 
  Lower			 = [a-z]
  Upper			 = [A-Z]
  Special		 = [\[\]\{\}\(\)\<\>\'\"\=\|\.\,\;]

  Letter		 = Lower | Upper
  Character		 = Lower | Upper | Special | "_"
  
  Identifier     = Letter+ "_" (Letter | "_")*
  Terminal		 = (Character)+

  LAYOUT         = [\ \t\n\r] 

  LAYOUT         = "//" ~[\n\r]* NewLineEOF 
  NewLineEOF     = [\n\r] 
  NewLineEOF     = EOF 
  EOF            =  

lexical restrictions

  // Ensure greedy matching for lexicals
  
  Identifier	-/- [a-zA-Z\_]
  Terminal		-/- [a-zA-Z\[\]\{\}\(\)\<\>\'\"\=\|\.\,\;\_]
  
  // EOF may not be followed by any char
  
  EOF           -/- ~[]
  
context-free restrictions

  // Ensure greedy matching for comments
  
  LAYOUT? -/- [\ \t\n\r]
  LAYOUT? -/- [\/].[\/]
  LAYOUT? -/- [\/].[\*]
